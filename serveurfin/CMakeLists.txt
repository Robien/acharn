cmake_minimum_required(VERSION 2.6)
PROJECT(serveur)
set(CMAKE_CXX_FLAGS "")
SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/CMakeModules")
SET(CMAKE_CXX_FLAGS_RELEASE "-O2")
SET(CMAKE_CXX_FLAGS_DEBUG  "-Wall")
SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO "-O2 -g")
SET(CMAKE_USE_RELATIVE_PATHS "ON")

IF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
   SET(CMAKE_BUILD_TYPE RelWithDebInfo)
ENDIF(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)

IF(CMAKE_CXX_FLAGS_DEBUG)
   SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
ELSE(CMAKE_CXX_FLAGS_DEBUG)
   SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
ENDIF(CMAKE_CXX_FLAGS_DEBUG)

#Inclusion de Boost
include(FindBoost)
find_package(
	Boost
	1.39.0
	REQUIRED filesystem thread
)
link_directories(${Boost_LIBRARY_DIRS})

INCLUDE_DIRECTORIES(
   ${X11_INCLUDE_DIR}
   ${PROJECT_SOURCE_DIR}/include
   ${PROJECT_SOURCE_DIR}
   ${Boost_INCLUDE_DIRS}
)


file(
	GLOB
	source_files
	./*.cpp
	./*.h
	src/*
	include/*
)

#FILE(GLOB SRCS src/*.cpp)
#FILE(GLOB HDRS include/*.h)
 
ADD_EXECUTABLE(
   serveur
   ${source_files}
)
 
TARGET_LINK_LIBRARIES(serveur
   ${Boost_LIBRARIES}
)
